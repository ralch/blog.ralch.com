<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>model on Svetlin Ralchev | Blog</title><link>http://blog.ralch.com/tags/model/</link><description>Recent content in model on Svetlin Ralchev | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>(c) 2021 Svetlin Ralchev</copyright><lastBuildDate>Sun, 22 Nov 2015 19:28:31 +0000</lastBuildDate><atom:link href="http://blog.ralch.com/tags/model/index.xml" rel="self" type="application/rss+xml"/><item><title>Data validation in Golang</title><link>http://blog.ralch.com/articles/golang-model-validation/</link><pubDate>Sun, 22 Nov 2015 19:28:31 +0000</pubDate><guid>http://blog.ralch.com/articles/golang-model-validation/</guid><description>Almost every application requires high data integrirty and quality. Very likely is its algorithms to behave weird and produce unexpected results due to invalid input.
An important aspect of software development is data validation. In this article we will explore govalidate package that helps us to validate and sanitize any string, struct and slice in Go.
The package itself is very infulenced by its javascript predaccessor validator.js.
Installation Like any other Go package we should install it first:</description></item></channel></rss>