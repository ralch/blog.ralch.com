<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>c on Svetlin Ralchev | Blog</title><link>http://blog.ralch.com/tags/c/</link><description>Recent content in c on Svetlin Ralchev | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>(c) 2021 Svetlin Ralchev</copyright><lastBuildDate>Sun, 23 Aug 2015 11:04:50 +0100</lastBuildDate><atom:link href="http://blog.ralch.com/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Sharing Golang packages to C and Go</title><link>http://blog.ralch.com/articles/golang-sharing-libraries/</link><pubDate>Sun, 23 Aug 2015 11:04:50 +0100</pubDate><guid>http://blog.ralch.com/articles/golang-sharing-libraries/</guid><description>The latest Go 1.5 version is out. As part of the new features, Go compiler can compile packages as a shared libraries.
It accepts -buildmode argument that determines how a package is compiled. These are the following options:
archive: Build the listed non-main packages into .a files. Packages named main are ignored. c-archive: Build the listed main package, plus all packages it imports, into a C archive file. c-shared: Build the listed main packages, plus all packages that they import, into C shared libraries.</description></item></channel></rss>