<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>serialization on Software adventures and thoughts</title><link>http://blog.ralch.com/tags/serialization/</link><description>Recent content in serialization on Software adventures and thoughts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 12 Jan 2016 08:02:19 +0000</lastBuildDate><atom:link href="http://blog.ralch.com/tags/serialization/index.xml" rel="self" type="application/rss+xml"/><item><title>Serialization objects with protocol buffers in Golang</title><link>http://blog.ralch.com/articles/golang-proto-buffer/</link><pubDate>Tue, 12 Jan 2016 08:02:19 +0000</pubDate><guid>http://blog.ralch.com/articles/golang-proto-buffer/</guid><description>What is protocol buffers? Protocol Buffers is a method of serializing structured data. It is useful in developing programs to communicate with each other over a wire or for storing data. The method involves an interface description language that describes the structure of some data and a program that generates source code from that description for generating or parsing a stream of bytes that represents the structured data.
Google developed Protocol Buffers for use internally and has made protocol compilers for C++, Java and Python available to the public under a free software, open source license.</description></item></channel></rss>