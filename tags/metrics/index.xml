<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>metrics on Software adventures and thoughts</title><link>http://blog.ralch.com/tags/metrics/</link><description>Recent content in metrics on Software adventures and thoughts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Dec 2015 13:39:32 +0000</lastBuildDate><atom:link href="http://blog.ralch.com/tags/metrics/index.xml" rel="self" type="application/rss+xml"/><item><title>Performance and memory analysis of Golang programs</title><link>http://blog.ralch.com/articles/golang-performance-and-memory-analysis/</link><pubDate>Sun, 13 Dec 2015 13:39:32 +0000</pubDate><guid>http://blog.ralch.com/articles/golang-performance-and-memory-analysis/</guid><description>As we continue looking at program metrics in Golang, it is time to look at performance matrics analysis.
Instrumentation Instrumentation is the process of adding code to your application to generate events to allow you to monitor application health and performance. Instrumentation allows you to profile applications. Profiling enables you to identify how long a particular method or operation takes to run and how efficient it is in terms of CPU and memory resource usage.</description></item><item><title>Expose application metrics with expvar</title><link>http://blog.ralch.com/articles/golang-metrics-with-expvar/</link><pubDate>Sun, 06 Dec 2015 08:47:15 +0000</pubDate><guid>http://blog.ralch.com/articles/golang-metrics-with-expvar/</guid><description>To determine whether your application meets its performance objectives and to help identify bottlenecks, you need to measure your program&amp;rsquo;s performance and collect metrics. They tend to be response time, throughput, and resource utilization (how much CPU, memory, disk I/O, and network bandwidth your application consumes while performing its tasks).
Metrics Metrics provide information about how close your program is to your performance goals. In addition, they also help you identify problem areas and bottlenecks within your application.</description></item></channel></rss>