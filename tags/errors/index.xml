<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>errors on Svetlin Ralchev | Blog</title><link>http://blog.ralch.com/tags/errors/</link><description>Recent content in errors on Svetlin Ralchev | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>(c) 2023 Svetlin Ralchev</copyright><lastBuildDate>Thu, 10 Mar 2016 08:52:29 +0000</lastBuildDate><atom:link href="http://blog.ralch.com/tags/errors/index.xml" rel="self" type="application/rss+xml"/><item><title>Errors handling in Golang</title><link>http://blog.ralch.com/articles/golang-handling-errors/</link><pubDate>Thu, 10 Mar 2016 08:52:29 +0000</pubDate><guid>http://blog.ralch.com/articles/golang-handling-errors/</guid><description>Go does not have an Exception handling model as most of the main stream languages. However, it uses the error interface type as the return type for any error that is going to be returned from a function or method:
type error interface { Error() string } It is an interface type. An error variable represents any value that can describe itself as a string. The most commonly-used error implementation is in the errors package.</description></item></channel></rss>