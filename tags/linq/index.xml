<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>LINQ on Svetlin Ralchev | Blog</title><link>http://blog.ralch.com/tags/linq/</link><description>Recent content in LINQ on Svetlin Ralchev | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>(c) 2023 Svetlin Ralchev</copyright><lastBuildDate>Sun, 25 Oct 2015 07:35:49 +0100</lastBuildDate><atom:link href="http://blog.ralch.com/tags/linq/index.xml" rel="self" type="application/rss+xml"/><item><title>Query data with Golang and LINQ</title><link>http://blog.ralch.com/articles/golang-query-data-with-linq/</link><pubDate>Sun, 25 Oct 2015 07:35:49 +0100</pubDate><guid>http://blog.ralch.com/articles/golang-query-data-with-linq/</guid><description>Query langauges provide a set of features to querying, projecting and retrieving data (usually relational data). But how to introduces these standard, easily-learned patterns for querying data?
In this article we will explore Go LINQ packages that bridges the gap between the world of objects and the world of data.
LINQ For first time is introduced by Microsoft in their programming language C#. Its purpose is to bridge the gap between query languages such as SQL and programming languages.</description></item></channel></rss>