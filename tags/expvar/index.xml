<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>expvar on Svetlin Ralchev</title><link>http://blog.ralch.com/tags/expvar/</link><description>Recent content in expvar on Svetlin Ralchev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Dec 2015 08:47:15 +0000</lastBuildDate><atom:link href="http://blog.ralch.com/tags/expvar/index.xml" rel="self" type="application/rss+xml"/><item><title>Expose application metrics with expvar</title><link>http://blog.ralch.com/articles/golang-metrics-with-expvar/</link><pubDate>Sun, 06 Dec 2015 08:47:15 +0000</pubDate><guid>http://blog.ralch.com/articles/golang-metrics-with-expvar/</guid><description>To determine whether your application meets its performance objectives and to help identify bottlenecks, you need to measure your program&amp;rsquo;s performance and collect metrics. They tend to be response time, throughput, and resource utilization (how much CPU, memory, disk I/O, and network bandwidth your application consumes while performing its tasks).
Metrics Metrics provide information about how close your program is to your performance goals. In addition, they also help you identify problem areas and bottlenecks within your application.</description></item></channel></rss>