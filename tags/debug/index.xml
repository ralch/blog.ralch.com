<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>debug on Svetlin Ralchev | Blog</title><link>http://blog.ralch.com/tags/debug/</link><description>Recent content in debug on Svetlin Ralchev | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>(c) 2023 Svetlin Ralchev</copyright><lastBuildDate>Sat, 08 Aug 2015 20:42:49 +0100</lastBuildDate><atom:link href="http://blog.ralch.com/tags/debug/index.xml" rel="self" type="application/rss+xml"/><item><title>Delve: Next generation debugger for Golang</title><link>http://blog.ralch.com/articles/golang-debug-with-delve/</link><pubDate>Sat, 08 Aug 2015 20:42:49 +0100</pubDate><guid>http://blog.ralch.com/articles/golang-debug-with-delve/</guid><description>In my previous post I demonstrated how you can debug golang applications with LLDB. In this article I will illustrate the most recent debugger for Go: Delve
The debugger is a community effort to bring a debugger in the toolchain of every Go developer.
It&amp;rsquo;s written in Go to debug Go code. It&amp;rsquo;s still in active development, but we can still benefit from its basic features.
Installation You should install Delve with the following command:</description></item><item><title>Debug Golang applications: LLDB</title><link>http://blog.ralch.com/articles/golang-debug-with-lldb/</link><pubDate>Sat, 01 Aug 2015 16:47:06 +0100</pubDate><guid>http://blog.ralch.com/articles/golang-debug-with-lldb/</guid><description>Even that ease and simplicity of using go are one of its main advanatages, there are difficulties in debugging applications written in go.
The lack of mature tools (like supported vim plugin) push most of us to use logging techniques to inspect and track down issues.
In this article, I will demonstrates how you can use vim and lldb to debug a go application. Before that you should make the application capable for debugging.</description></item></channel></rss>