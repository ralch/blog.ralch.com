<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>network programming on Software adventures and thoughts</title><link>http://blog.ralch.com/categories/network-programming/</link><description>Recent content in network programming on Software adventures and thoughts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Aug 2017 14:17:48 +0100</lastBuildDate><atom:link href="http://blog.ralch.com/categories/network-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Network Programming and Proxies in Golang</title><link>http://blog.ralch.com/articles/network-programming-and-proxies-in-golang/</link><pubDate>Tue, 22 Aug 2017 14:17:48 +0100</pubDate><guid>http://blog.ralch.com/articles/network-programming-and-proxies-in-golang/</guid><description>Have you used any proxy servers in your infrastructure? There are a lot of different scenarios in which you may use a proxy in order to control access to your machines and resources. I am not saying that it&amp;rsquo;s the best approach but some companies use that.
Recently, I have been working on a TCP service that has to connect via SOCK5 proxy server. But before we dig into that, I would like to show what Golang offers for the regular HTTP user.</description></item></channel></rss>